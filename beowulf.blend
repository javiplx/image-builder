#!/usr/bin/env zsh
# See LICENSE file for copyright and license details

vars+=(codename)
codename="leste" && source "$R/../beowulf.config"

case "$device_name" in
n900|droid4|pine*)
	build_kernel_${arch}() {
		fn build_kernel_${arch} "(override)"
		#prebuild || zerr
		postbuild || zerr
		copy-root-overlay || zerr
	}
	;;
esac

blend_bootstrap_setup() {
	fn blend_bootstrap_setup
	req=(strapdir maemo_keyring_url)
	ckreq || return 1

	cat <<EOF | sudo tee ${strapdir}/blend-bootstrap-setup >/dev/null
#!/bin/sh
set -e
wget -O maemo-keyring.deb "$maemo_keyring_url"
dpkg -i maemo-keyring.deb
rm -f maemo-keyring.deb
EOF
	chroot-script -d blend-bootstrap-setup || zerr
}

blend_postinst() {
	fn blend_postinst
	req=(strapdir)
	[[ -n "$armsdk_version" ]] && req+=(device_name)
	ckreq || return 1

	notice "copying rootfs overlays"
	sudo rsync -vraX --chown=root:root "$R/../rootfs-overlay/common/" "${strapdir}"

	if [[ -n "$armsdk_version" ]]; then
		sudo rsync -vraX --chown=root:root "$R/../rootfs-overlay/${device_name}/" "${strapdir}"
		echo "devuan-${device_name}" | sudo tee "$strapdir/etc/hostname" >/dev/null
		sudo sed -e "s/devuan/devuan-${device_name}/" -i "$strapdir/etc/hosts"
		cat <<EOF | sudo tee "$strapdir/etc/fstab" >/dev/null
# fstab for arm system
none /sys/kernel/debug debugfs defaults 0 0
/dev/mmcblk0p1 /boot ${bootfs} defaults 0 1
EOF
	fi

	case "$device_name" in
	droid4)
		cat <<EOF | sudo tee ${strapdir}/droid4-finalize >/dev/null
#!/bin/sh
rc-update add droid4-lcd sysinit
sed -e 's/^LABEL=.*/LABEL=Maemo Leste/' -i /boot/boot/boot.cfg
EOF
		chroot-script -d droid4-finalize || zerr
		;;
	esac

	blend_finalize || zerr

	return 0
}

blend_finalize() {
	fn blend_finalize
	req=(strapdir)
	ckreq || return 1

	notice "Finalizing installation"
	cat <<EOF | sudo tee ${strapdir}/blend-finalize >/dev/null
#!/bin/sh

apt-get --yes --force-yes purge ${finalize_purge_packages}
apt-get --yes --force-yes --purge autoremove
dpkg -l | awk '/^rc / {print \$2}' | xargs apt-get --yes --force-yes purge

# TODO: Do this through a package when we have a language-changing package
# Generate locales
apt-cache search hildon-common-strings-l10n \
	| grep -v mr0 \
	| awk -F'[()]' '{printf "%s.UTF-8 UTF-8\n", \$2}' \
	>> /etc/locale.gen
locale-gen
setlocale en_US.utf-8 en_US.utf-8

gconftool-2 -s /apps/osso/inputmethod/use_finger_kb -t bool true
#gconftool-2 -s /syste/osso/af/slide-open -t bool true

cd /etc/runlevels
for i in *; do
	if [ -L "\$i" ]; then
		mv "\$i" default
	fi
done

apt-get update
apt-get clean
updatedb
update-ca-certificates
EOF
	chroot-script -d blend-finalize || zerr
}

conf_print_sourceslist() {
	fn conf_print_sourceslist "(override)"
	req=(codename)
	[[ -n "$armsdk_version" ]] && req+=(device_name)
	ckreq || return 1

	devname="$device_name"
	case "$device_name" in
	pine*)
		devname="pinephone"
		;;
	raspi*)
		devname="raspberrypi"
		;;
	esac

	cat <<EOF
deb https://pkgmaster.devuan.org/merged ${release} main contrib non-free
deb https://pkgmaster.devuan.org/merged ${release}-updates main contrib non-free
deb https://pkgmaster.devuan.org/merged ${release}-security main contrib non-free

deb https://maedevu.maemo.org/${codename} ${release} main contrib non-free ${lima} ${devname}
EOF

	if [[ "$devel_image" = true ]]; then
		cat <<EOF
deb https://maedevu.maemo.org/${codename} ${release}-devel main contrib non-free ${lima} ${devname}
EOF
	fi
}
